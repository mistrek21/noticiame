import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import { IoReorderThreeOutline } from "react-icons/io5";
import { BsBell } from "react-icons/bs";
import { FiEdit } from "react-icons/fi";

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex h-screen w-full flex-col">
        {/* Header  */}
        <header className="flex h-20 w-full flex-row items-center justify-between border border-gray-200 bg-gray-100 ">
          <div className="ml-10 flex items-center space-x-4">
            <IoReorderThreeOutline className="text-2xl" />
            <input
              placeholder="busca algo"
              className="w-96 rounded-full pl-2 outline-none first-letter:capitalize"
            />
          </div>

          <div className="mr-60 text-2xl font-bold">Meneame</div>

          <div className="mr-10 flex items-center space-x-2">
            <div>
              <div>
                <BsBell className="text-2xl" />
              </div>
            </div>

            <div>
              <div className="h-5 w-5 rounded-full bg-gray-600" />
            </div>

            <div>
              <button className="flex items-center space-x-2 rounded border border-gray-200 px-4 py-2 transition hover:border-gray-900 hover:text-gray-900 ">
                <div>Write</div>
                <div>
                  <FiEdit className="text-2xl" />
                </div>
              </button>
            </div>
          </div>
        </header>

        <div className="grid grid-cols-12">{/* Main Screen  */}</div>
      </div>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
